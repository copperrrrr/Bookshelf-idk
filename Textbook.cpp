#include "Textbook.h"
#include <iostream>
#include <limits>


Textbook::Textbook() : Base(), title(""), author(""), year(0), institution(""), studyYear(0), pages(0) {
    std::cout << ">>> –í—ã–∑–≤–∞–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é" << std::endl;
    std::cout << "    –£—á–µ–±–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏" << std::endl;
}


Textbook::Textbook(const std::string& t, const std::string& a, int y, 
                   const std::string& inst, int sy, int p, double price)
    : Base(price), title(t), author(a), year(y), institution(inst), studyYear(sy), pages(p) {
    std::cout << ">>> –í—ã–∑–≤–∞–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏" << std::endl;
    std::cout << "    –°–æ–∑–¥–∞–Ω —É—á–µ–±–Ω–∏–∫: \"" << title << "\" –¥–ª—è " << institution << std::endl;
}

Textbook::Textbook(const Textbook& other) 
    : Base(other), title(other.title), author(other.author), year(other.year),
      institution(other.institution), studyYear(other.studyYear), pages(other.pages) {
    std::cout << ">>> –í—ã–∑–≤–∞–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è" << std::endl;
    std::cout << "    –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —É—á–µ–±–Ω–∏–∫: \"" << title << "\"" << std::endl;
}

Textbook::~Textbook() {
    std::cout << ">>> –í—ã–∑–≤–∞–Ω –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —É—á–µ–±–Ω–∏–∫–∞ \"" << title << "\"" << std::endl;
}


void Textbook::display() const {
    std::cout << "\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << std::endl;
    std::cout << "‚ïë              üìñ –£–ß–ï–ë–ù–ò–ö                    ‚ïë" << std::endl;
    std::cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << std::endl;
    std::cout << "‚ïë –ù–∞–∑–≤–∞–Ω–∏–µ:           " << title << std::endl;
    std::cout << "‚ïë –ê–≤—Ç–æ—Ä:              " << author << std::endl;
    std::cout << "‚ïë –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:        " << year << std::endl;
    std::cout << "‚ïë –£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ:  " << institution << std::endl;
    std::cout << "‚ïë –ì–æ–¥ –æ–±—É—á–µ–Ω–∏—è:       " << studyYear << " –∫–ª–∞—Å—Å/–∫—É—Ä—Å" << std::endl;
    std::cout << "‚ïë –°—Ç—Ä–∞–Ω–∏—Ü:            " << pages << std::endl;
    std::cout << "‚ïë –¶–µ–Ω–∞:               " << price << " —Ä—É–±." << std::endl;
    std::cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << std::endl;
}

std::string Textbook::getType() const {
    return "Textbook";
}

void Textbook::saveToFile(std::ofstream& out) const {
    out << "Textbook\n";
    out << title << "\n" 
        << author << "\n" 
        << year << "\n" 
        << institution << "\n" 
        << studyYear << "\n" 
        << pages << "\n" 
        << price << "\n";
}

void Textbook::loadFromFile(std::ifstream& in) {
    std::getline(in, title);
    std::getline(in, author);
    in >> year;
    in.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
    std::getline(in, institution);
    in >> studyYear >> pages >> price;
    in.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
}

void Textbook::edit() {
    int choice;
    std::cout << "\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << std::endl;
    std::cout << "‚ïë        –ß–¢–û –ò–ó–ú–ï–ù–ò–¢–¨ –í –£–ß–ï–ë–ù–ò–ö–ï?            ‚ïë" << std::endl;
    std::cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << std::endl;
    std::cout << "‚ïë 1. –ù–∞–∑–≤–∞–Ω–∏–µ                                ‚ïë" << std::endl;
    std::cout << "‚ïë 2. –ê–≤—Ç–æ—Ä                                   ‚ïë" << std::endl;
    std::cout << "‚ïë 3. –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞                             ‚ïë" << std::endl;
    std::cout << "‚ïë 4. –£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ                       ‚ïë" << std::endl;
    std::cout << "‚ïë 5. –ì–æ–¥ –æ–±—É—á–µ–Ω–∏—è (–∫–ª–∞—Å—Å/–∫—É—Ä—Å)               ‚ïë" << std::endl;
    std::cout << "‚ïë 6. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü                      ‚ïë" << std::endl;
    std::cout << "‚ïë 7. –¶–µ–Ω–∞                                    ‚ïë" << std::endl;
    std::cout << "‚ïë 0. –û—Ç–º–µ–Ω–∞                                  ‚ïë" << std::endl;
    std::cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << std::endl;
    std::cout << "–í–∞—à –≤—ã–±–æ—Ä: ";
    std::cin >> choice;
    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
    
    try {
        switch(choice) {
            case 1:
                std::cout << "–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: " << title << std::endl;
                std::cout << "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ";
                std::getline(std::cin, title);
                break;
            case 2:
                std::cout << "–¢–µ–∫—É—â–∏–π –∞–≤—Ç–æ—Ä: " << author << std::endl;
                std::cout << "–ù–æ–≤—ã–π –∞–≤—Ç–æ—Ä: ";
                std::getline(std::cin, author);
                break;
            case 3:
                std::cout << "–¢–µ–∫—É—â–∏–π –≥–æ–¥: " << year << std::endl;
                std::cout << "–ù–æ–≤—ã–π –≥–æ–¥: ";
                std::cin >> year;
                if (year < 0 || year > 2025) {
                    throw std::invalid_argument("–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0-2025!");
                }
                break;
            case 4:
                std::cout << "–¢–µ–∫—É—â–µ–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: " << institution << std::endl;
                std::cout << "–ù–æ–≤–æ–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: ";
                std::getline(std::cin, institution);
                break;
            case 5:
                std::cout << "–¢–µ–∫—É—â–∏–π –≥–æ–¥ –æ–±—É—á–µ–Ω–∏—è: " << studyYear << std::endl;
                std::cout << "–ù–æ–≤—ã–π –≥–æ–¥ –æ–±—É—á–µ–Ω–∏—è: ";
                std::cin >> studyYear;
                if (studyYear <= 0) {
                    throw std::invalid_argument("–ì–æ–¥ –æ–±—É—á–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0!");
                }
                break;
            case 6:
                std::cout << "–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: " << pages << std::endl;
                std::cout << "–ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ";
                std::cin >> pages;
                if (pages <= 0) {
                    throw std::invalid_argument("–°—Ç—Ä–∞–Ω–∏—Ü –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!");
                }
                break;
            case 7:
                double newPrice;
                std::cout << "–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: " << price << " —Ä—É–±." << std::endl;
                std::cout << "–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ";
                std::cin >> newPrice;
                setPrice(newPrice);
                break;
            case 0:
                std::cout << "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ." << std::endl;
                return;
            default:
                throw std::out_of_range("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä");
        }
        std::cout << "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã" << std::endl;
    } catch (const std::exception& e) {
        std::cout << "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: " << e.what() << std::endl;
    }
}


std::string Textbook::getTitle() const { return title; }
std::string Textbook::getAuthor() const { return author; }
int Textbook::getYear() const { return year; }
std::string Textbook::getInstitution() const { return institution; }
int Textbook::getStudyYear() const { return studyYear; }
int Textbook::getPages() const { return pages; }

void Textbook::setTitle(const std::string& t) { title = t; }
void Textbook::setAuthor(const std::string& a) { author = a; }

void Textbook::setYear(int y) { 
    if (y < 0 || y > 2025) {
        throw std::invalid_argument("–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0-2025");
    }
    year = y; 
}

void Textbook::setInstitution(const std::string& inst) { institution = inst; }

void Textbook::setStudyYear(int sy) { 
    if (sy <= 0) {
        throw std::invalid_argument("–ì–æ–¥ –æ–±—É—á–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0");
    }
    studyYear = sy; 
}

void Textbook::setPages(int p) { 
    if (p <= 0) {
        throw std::invalid_argument("–°—Ç—Ä–∞–Ω–∏—Ü –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0");
    }
    pages = p; 
}


Textbook& Textbook::operator=(const Textbook& other) {
    if (this != &other) {
        Base::operator=(other);
        title = other.title;
        author = other.author;
        year = other.year;
        institution = other.institution;
        studyYear = other.studyYear;
        pages = other.pages;
        
        std::cout << ">>> –í—ã–∑–≤–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è " << std::endl;
        std::cout << "    –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —É—á–µ–±–Ω–∏–∫: \"" << title << "\"" << std::endl;
    } else {
        std::cout << "–°–∞–º–æ–ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ —É—á–µ–±–Ω–∏–∫–∞" << std::endl;
    }
    return *this;
}